@page "/newvehicle"
@using CarM8_01.Data
@using CarM8_01.Data.Models
@inherits OwningComponentBase<VehiclesService>

<h3>New Vehicle</h3>
<br/>
<div class="newvehiclesform">
    <EditForm Model="@globVehicle" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
	    <div class="form-group ">
		    <label>Year</label>
			    <InputText id="year" @bind-Value="globVehicle.Year"/>
			    <ValidationMessage For="() => globVehicle.Year"/>
	    </div>
	    <div class="form-group ">
		    <label>Make</label>
			    <InputText id="make" @bind-Value="globVehicle.Make"/>
			    <ValidationMessage For="() => globVehicle.Make"/>
	    </div>
	    <div class="form-group ">
		    <label>Model</label>
			    <InputText id="model" @bind-Value="globVehicle.Model" />
			    <ValidationMessage For="() => globVehicle.Model"/>
	    </div>
	    <div class="form-group ">
		    <label for="type">Vehicle Type</label>
			    <InputSelect id="type" @bind-Value="globVehicle.VehicleType">
				    <option value="">Select type ...</option>
				    <option value="Convertible">Convertible</option>
				    <option value="Coupe">Coupe</option>
				    <option value="Hatchback">Hatchback</option>
				    <option value="Minivan/Van">Minivan/Van</option>
				    <option value="Sedan">Sedan</option>
				    <option value="Station Wagon">Station Wagon</option>
				    <option value="SUV">SUV</option>
				    <option value="Truck">Truck</option>
			    </InputSelect>
			    <ValidationMessage For="() => globVehicle.VehicleType"/>
	    </div>
	    <div class="form-group ">
		    <label>Color</label>
		    <InputText id="color" @bind-Value="globVehicle.Color" />
		    <ValidationMessage For="() => globVehicle.Color"/>
	    </div>
        <div class="form-group ">
		    <label>Engine</label>
		    <InputText id="engine" @bind-Value="globVehicle.Engine" />
		    <ValidationMessage For="() => globVehicle.Engine"/>
	    </div>
	    <div class="form-group ">
		    <label>Mileage</label>
		    <InputText id="mileage" @bind-Value="globVehicle.Mileage" />
		    <ValidationMessage For="() => globVehicle.Mileage"/>
	    </div>
	    <div class="form-group ">
		    <label>Fuel Capacity</label>
		    <InputText id="fuelcapacity" @bind-Value="globVehicle.FuelCapacity" />
		    <ValidationMessage For="() => globVehicle.FuelCapacity"/>
	    </div>
	    <button type="submit" class="e-btn e-normal e-primary">Add New Vehicle</button>
    </EditForm>
</div>


@code{
	private Vehicle globVehicle = new Vehicle();

	public async Task HandleValidSubmit(EditContext context)
	{
			//Assigning vehicleID a random number
			Vehicles newVehicles = new Vehicles();
			Random r = new Random();
			int iD = r.Next(10);
			//Assigning the velaues stated in the form to the values of a new object
			newVehicles.VehicleId = iD;
			newVehicles.Year = globVehicle.Year;
			newVehicles.Make = globVehicle.Make;
			newVehicles.Model = globVehicle.Model;
			newVehicles.VehicleType = globVehicle.VehicleType;
			newVehicles.Color = globVehicle.Color;
			newVehicles.Engine = globVehicle.Engine;
			newVehicles.Mileage = globVehicle.Mileage;
			newVehicles.FuelCapacity = globVehicle.FuelCapacity;
			//Saving the new vehicle
			var result = @Service.CreateVehicleAsync(newVehicles);
			//Clearing the form
			globVehicle = new Vehicle();

	}
}